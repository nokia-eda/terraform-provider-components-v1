{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.components.v1.Chassis": {
        "description": "Chassis is the Schema for the chassis API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Chassis",
            "pattern": "^Chassis$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Chassis",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.Chassis_metadata"
          },
          "spec": {
            "description": "ChassisSpec defines the desired state of Chassis",
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ChassisStatus defines the observed state of Chassis",
            "properties": {
              "chassisMacAddress": {
                "description": "MAC Address of the Chassis",
                "title": "Chassis MAC Address",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100
                }
              },
              "children": {
                "description": "References to children components",
                "items": {
                  "properties": {
                    "name": {
                      "description": "Reference to a child component",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 3,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "TargetParent"
                      }
                    },
                    "type": {
                      "description": "Type of the child component",
                      "enum": [
                        "Fan",
                        "FanTray",
                        "PowerSupply",
                        "PowerModule",
                        "PowerShelf",
                        "InterfaceModule",
                        "ControlModule",
                        "FabricModule",
                        "Chassis",
                        "Transceiver"
                      ],
                      "title": "Type",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "TargetParent"
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Children",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.ChassisList": {
        "description": "ChassisList is a list of chassis",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.Chassis"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.Chassis_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "Chassis",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.Component": {
        "description": "Component is the Schema for the components API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Component",
            "pattern": "^Component$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Component",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.Component_metadata"
          },
          "spec": {
            "description": "ComponentSpec defines the desired state of Component",
            "properties": {
              "node": {
                "description": "TopologyNode this Component resides on.\nIndicates the operation in which to apply the configuration",
                "title": "Node",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Component",
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "Component"
                }
              },
              "slot": {
                "description": "Slot this Component resides in, unset for Components that do not have a slot or ID.",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "type": {
                "description": "Type of Component.",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Component",
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "Component"
                }
              }
            },
            "required": [
              "node",
              "type"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ComponentStatus defines the observed state of Component",
            "properties": {
              "enabled": {
                "description": "The administrative status of this Component.",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 50
                }
              },
              "lastChange": {
                "description": "The date and time this Component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Component",
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "manufacturedDate": {
                "description": "The date this Component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this Component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Component",
                  "ui-column-span": 1,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "Component"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this Component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Numbers",
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this Component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Numbers",
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "type": {
                "description": "Component type, as provided by the node.",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-category": "Component",
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "Component"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.ComponentList": {
        "description": "ComponentList is a list of components",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.Component"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.Component_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "Component",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.ControlModule": {
        "description": "ControlModule is the Schema for the controlmodules API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ControlModule",
            "pattern": "^ControlModule$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ControlModule",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.ControlModule_metadata"
          },
          "spec": {
            "description": "ControlModuleSpec defines the desired state of ControlModule",
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ControlModuleStatus defines the observed state of ControlModule",
            "properties": {
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "locatorEnabled": {
                "description": "Indicates if the locator LED for the component is active",
                "title": "Locator Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1000
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "parent": {
                "description": "Reference to a parent component",
                "title": "Parent",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "parentType": {
                "description": "Type of the parent component",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Parent Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "role": {
                "description": "Role of the control module",
                "enum": [
                  "Active",
                  "Standby"
                ],
                "title": "Role",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "Control Module"
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "slot": {
                "description": "Slot this component resides in, unset for components that do not have a slot or ID",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "softwareVersion": {
                "description": "Version string of the software running on this component",
                "title": "Software Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 900
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "temperature": {
                "description": "Temperature information for this component",
                "properties": {
                  "alarmState": {
                    "description": "The temperature alarm state, as reported by the component",
                    "title": "Alarm State",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 400
                    }
                  },
                  "instant": {
                    "description": "The current temperature of this component",
                    "title": "Instant",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 100,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "margin": {
                    "description": "The margin temperature of this component",
                    "title": "Margin",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "maximum": {
                    "description": "The maximum temperature of this component",
                    "title": "Maximum",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "threshold": {
                    "description": "The threshold temperature of this component",
                    "title": "Threshold",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  }
                },
                "title": "Temperature",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 1100
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.ControlModuleList": {
        "description": "ControlModuleList is a list of controlmodules",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.ControlModule"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.ControlModule_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "ControlModule",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.FabricModule": {
        "description": "FabricModule is the Schema for the fabricmodules API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "FabricModule",
            "pattern": "^FabricModule$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to FabricModule",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.FabricModule_metadata"
          },
          "spec": {
            "description": "FabricModuleSpec defines the desired state of FabricModule",
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "FabricModuleStatus defines the observed state of FabricModule",
            "properties": {
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "locatorEnabled": {
                "description": "Indicates if the locator LED for the component is active",
                "title": "Locator Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1000
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "parent": {
                "description": "Reference to a parent component",
                "title": "Parent",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "parentType": {
                "description": "Type of the parent component",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Parent Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "slot": {
                "description": "Slot this component resides in, unset for components that do not have a slot or ID",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "softwareVersion": {
                "description": "Version string of the software running on this component",
                "title": "Software Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 900
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "temperature": {
                "description": "Temperature information for this component",
                "properties": {
                  "alarmState": {
                    "description": "The temperature alarm state, as reported by the component",
                    "title": "Alarm State",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 400
                    }
                  },
                  "instant": {
                    "description": "The current temperature of this component",
                    "title": "Instant",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 100,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "margin": {
                    "description": "The margin temperature of this component",
                    "title": "Margin",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "maximum": {
                    "description": "The maximum temperature of this component",
                    "title": "Maximum",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "threshold": {
                    "description": "The threshold temperature of this component",
                    "title": "Threshold",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  }
                },
                "title": "Temperature",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 1100
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.FabricModuleList": {
        "description": "FabricModuleList is a list of fabricmodules",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.FabricModule"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.FabricModule_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "FabricModule",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.Fan": {
        "description": "Fan is the Schema for the fans API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Fan",
            "pattern": "^Fan$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Fan",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.Fan_metadata"
          },
          "spec": {
            "description": "FanSpec defines the desired state of Fan",
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "FanStatus defines the observed state of Fan",
            "properties": {
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "locatorEnabled": {
                "description": "Indicates if the locator LED for the component is active",
                "title": "Locator Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1000
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "parent": {
                "description": "Reference to a parent component",
                "title": "Parent",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "parentType": {
                "description": "Type of the parent component",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Parent Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "slot": {
                "description": "Slot this component resides in, unset for components that do not have a slot or ID",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.FanList": {
        "description": "FanList is a list of fans",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.Fan"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.Fan_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "Fan",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.InterfaceModule": {
        "description": "InterfaceModule is the Schema for the interfacemodules API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "InterfaceModule",
            "pattern": "^InterfaceModule$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to InterfaceModule",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.InterfaceModule_metadata"
          },
          "spec": {
            "description": "InterfaceModuleSpec defines the desired state of InterfaceModule",
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "InterfaceModuleStatus defines the observed state of InterfaceModule",
            "properties": {
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "locatorEnabled": {
                "description": "Indicates if the locator LED for the component is active",
                "title": "Locator Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1000
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "parent": {
                "description": "Reference to a parent component",
                "title": "Parent",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "parentType": {
                "description": "Type of the parent component",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Parent Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "slot": {
                "description": "Slot this component resides in, unset for components that do not have a slot or ID",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "softwareVersion": {
                "description": "Version string of the software running on this component",
                "title": "Software Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 900
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "temperature": {
                "description": "Temperature information for this component",
                "properties": {
                  "alarmState": {
                    "description": "The temperature alarm state, as reported by the component",
                    "title": "Alarm State",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 400
                    }
                  },
                  "instant": {
                    "description": "The current temperature of this component",
                    "title": "Instant",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 100,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "margin": {
                    "description": "The margin temperature of this component",
                    "title": "Margin",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "maximum": {
                    "description": "The maximum temperature of this component",
                    "title": "Maximum",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "threshold": {
                    "description": "The threshold temperature of this component",
                    "title": "Threshold",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  }
                },
                "title": "Temperature",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 1100
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.InterfaceModuleList": {
        "description": "InterfaceModuleList is a list of interfacemodules",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.InterfaceModule"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.InterfaceModule_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "InterfaceModule",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.Monitor": {
        "description": "Monitor is the Schema for the monitors API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Monitor",
            "pattern": "^Monitor$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Monitor",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor_metadata"
          },
          "spec": {
            "description": "MonitorSpec defines the desired state of Monitor",
            "properties": {
              "cpu": {
                "description": "CPU monitoring for targets matching this Monitor.",
                "properties": {
                  "enabled": {
                    "default": true,
                    "description": "Enable or disable CPU monitoring.",
                    "title": "Enabled",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "utilization": {
                    "description": "Parameters relating to CPU utilization monitoring.",
                    "properties": {
                      "criticalThreshold": {
                        "default": 95,
                        "description": "The minimum average utilization over the last 1 minute to trigger a critical alarm.\nThis value must be greater than the majorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Critical Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "fallingDelta": {
                        "default": 5,
                        "description": "The delta in which a triggered threshold must drop below to clear an alarm.\nFor example, with a criticalThreshold of 90 and a fallingDelta of 5, the critical alarm will clear when the utilization drops below 85.",
                        "maximum": 25,
                        "minimum": 1,
                        "title": "Falling Delta",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 1,
                          "ui-order-priority": 400
                        }
                      },
                      "majorThreshold": {
                        "default": 90,
                        "description": "The minimum average utilization over the last 1 minute to trigger a major alarm.\nThis value must be greater than the minorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Major Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 200,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "minorThreshold": {
                        "default": 80,
                        "description": "The minimum average utilization over the last 1 minute to trigger a minor alarm.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Minor Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 100,
                          "ui-single-line-group": "Thresholds"
                        }
                      }
                    },
                    "title": "Thresholds",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-visible-if": "self.enabled === true"
                    }
                  }
                },
                "required": [
                  "enabled"
                ],
                "title": "CPU",
                "type": "object"
              },
              "memory": {
                "description": "Memory monitoring for targets matching this Monitor.",
                "properties": {
                  "enabled": {
                    "default": true,
                    "description": "Enable or disable memory monitoring.",
                    "title": "Enabled",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "utilization": {
                    "description": "Parameters relating to memory utilization monitoring.",
                    "properties": {
                      "criticalThreshold": {
                        "default": 95,
                        "description": "The minimum average utilization over the last 1 minute to trigger a critical alarm.\nThis value must be greater than the majorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Critical Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "fallingDelta": {
                        "default": 5,
                        "description": "The delta in which a triggered threshold must drop below to clear an alarm.\nFor example, with a criticalThreshold of 90 and a fallingDelta of 5, the critical alarm will clear when the utilization drops below 85.",
                        "maximum": 25,
                        "minimum": 1,
                        "title": "Falling Delta",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 1,
                          "ui-order-priority": 400
                        }
                      },
                      "majorThreshold": {
                        "default": 90,
                        "description": "The minimum average utilization over the last 1 minute to trigger a major alarm.\nThis value must be greater than the minorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Major Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 200,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "minorThreshold": {
                        "default": 80,
                        "description": "The minimum average utilization over the last 1 minute to trigger a minor alarm.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Minor Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 100,
                          "ui-single-line-group": "Thresholds"
                        }
                      }
                    },
                    "title": "Thresholds",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-visible-if": "self.enabled === true"
                    }
                  }
                },
                "required": [
                  "enabled"
                ],
                "title": "Memory",
                "type": "object"
              },
              "targetSelector": {
                "description": "Selector to use when including targets to monitor.",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Target Selector",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-category": "Targets",
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "Targets"
                }
              },
              "targets": {
                "description": "References to targets to monitor.",
                "items": {
                  "type": "string"
                },
                "title": "Targets",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-category": "Targets",
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "Targets"
                }
              },
              "volume": {
                "description": "Volume monitoring for targets matching this Monitor.",
                "properties": {
                  "enabled": {
                    "default": true,
                    "description": "Enable or disable volume monitoring.",
                    "title": "Enabled",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "utilization": {
                    "description": "Parameters relating to volume utilization monitoring.",
                    "properties": {
                      "criticalThreshold": {
                        "default": 95,
                        "description": "The minimum average utilization over the last 1 minute to trigger a critical alarm.\nThis value must be greater than the majorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Critical Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "fallingDelta": {
                        "default": 5,
                        "description": "The delta in which a triggered threshold must drop below to clear an alarm.\nFor example, with a criticalThreshold of 90 and a fallingDelta of 5, the critical alarm will clear when the utilization drops below 85.",
                        "maximum": 25,
                        "minimum": 1,
                        "title": "Falling Delta",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 1,
                          "ui-order-priority": 400
                        }
                      },
                      "majorThreshold": {
                        "default": 90,
                        "description": "The minimum average utilization over the last 1 minute to trigger a major alarm.\nThis value must be greater than the minorThreshold.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Major Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 200,
                          "ui-single-line-group": "Thresholds"
                        }
                      },
                      "minorThreshold": {
                        "default": 80,
                        "description": "The minimum average utilization over the last 1 minute to trigger a minor alarm.",
                        "maximum": 100,
                        "minimum": 1,
                        "title": "Minor Threshold",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "Thresholds",
                          "ui-column-span": 1,
                          "ui-order-priority": 100,
                          "ui-single-line-group": "Thresholds"
                        }
                      }
                    },
                    "title": "Thresholds",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-visible-if": "self.enabled === true"
                    }
                  }
                },
                "required": [
                  "enabled"
                ],
                "title": "Volume",
                "type": "object"
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "MonitorStatus defines the observed state of Monitor",
            "properties": {
              "targets": {
                "description": "Targets being monitored.",
                "items": {
                  "type": "string"
                },
                "title": "Targets",
                "type": "array"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.MonitorList": {
        "description": "MonitorList is a list of monitors",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.Monitor_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.components.v1.Monitor_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.components.v1.Monitor_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "Monitor",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.components.v1.PowerSupply": {
        "description": "PowerSupply is the Schema for the powersupplies API",
        "properties": {
          "apiVersion": {
            "default": "components.eda.nokia.com/v1",
            "pattern": "^components\\.eda\\.nokia\\.com/v1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to components.eda.nokia.com/v1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "PowerSupply",
            "pattern": "^PowerSupply$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to PowerSupply",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.components.v1.PowerSupply_metadata"
          },
          "spec": {
            "description": "PowerSupplySpec defines the desired state of PowerSupply",
            "properties": {
              "foo": {
                "description": "INSERT ADDITIONAL SPEC FIELDS - define desired state of cluster\nImportant: Run \"edabuilder generate\" to regenerate code after modifying this file",
                "type": "string"
              }
            },
            "required": [
              "foo"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "PowerSupplyStatus defines the observed state of PowerSupply",
            "properties": {
              "commonLanguageEquipmentIdentifier": {
                "description": "The CLEI code of this component",
                "title": "CLEI Code",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 800
                }
              },
              "lastBooted": {
                "description": "The date and time this component last booted",
                "format": "date-time",
                "title": "Last Booted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 350,
                  "ui-single-line-group": "Component"
                }
              },
              "lastChange": {
                "description": "The date and time this component last changed operational state",
                "format": "date-time",
                "title": "Last Change",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "locatorEnabled": {
                "description": "Indicates if the locator LED for the component is active",
                "title": "Locator Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1000
                }
              },
              "manufacturedDate": {
                "description": "The date this component was manufactured",
                "format": "date",
                "title": "Manufactured Date",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 600
                }
              },
              "operationalState": {
                "description": "Indicates the current operational state of this component.",
                "enum": [
                  "Up",
                  "Down",
                  "Rebooting",
                  "Unknown",
                  "Starting",
                  "Empty"
                ],
                "title": "Operational State",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "EnabledOperational"
                }
              },
              "parent": {
                "description": "Reference to a parent component",
                "title": "Parent",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 3,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "parentType": {
                "description": "Type of the parent component",
                "enum": [
                  "Fan",
                  "FanTray",
                  "PowerSupply",
                  "PowerModule",
                  "PowerShelf",
                  "InterfaceModule",
                  "ControlModule",
                  "FabricModule",
                  "Chassis",
                  "Transceiver"
                ],
                "title": "Parent Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "partNumber": {
                "description": "The discovered part number of this component",
                "title": "Part Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Numbers"
                }
              },
              "removable": {
                "description": "Indicates if this component is removable",
                "title": "Removable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 700
                }
              },
              "serialNumber": {
                "description": "The discovered serial number of this component",
                "title": "Serial Number",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Numbers"
                }
              },
              "slot": {
                "description": "Slot this component resides in, unset for components that do not have a slot or ID",
                "title": "Slot",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Component"
                }
              },
              "softwareVersion": {
                "description": "Version string of the software running on this component",
                "title": "Software Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 900
                }
              },
              "target": {
                "description": "Target this component resides on.",
                "title": "Target",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "TargetParent"
                }
              },
              "temperature": {
                "description": "Temperature information for this component",
                "properties": {
                  "alarmState": {
                    "description": "The temperature alarm state, as reported by the component",
                    "title": "Alarm State",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 400
                    }
                  },
                  "instant": {
                    "description": "The current temperature of this component",
                    "title": "Instant",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 100,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "margin": {
                    "description": "The margin temperature of this component",
                    "title": "Margin",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "maximum": {
                    "description": "The maximum temperature of this component",
                    "title": "Maximum",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "Temperature"
                    }
                  },
                  "threshold": {
                    "description": "The threshold temperature of this component",
                    "title": "Threshold",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "Temperature"
                    }
                  }
                },
                "title": "Temperature",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 5,
                  "ui-order-priority": 1100
                }
              },
              "type": {
                "description": "Component type, as provided by the target",
                "title": "Type",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 150,
                  "ui-single-line-group": "Type"
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.PowerSupplyList": {
        "description": "PowerSupplyList is a list of powersupplies",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.components.v1.PowerSupply"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.components.v1.PowerSupply_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "components.eda.nokia.com",
                  "kind": "PowerSupply",
                  "type": "label",
                  "version": "v1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Components Application APIs.",
    "version": "v1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/components.eda.nokia.com": {
      "get": {
        "description": "list versions available from components.eda.nokia.com",
        "operationId": "getVersionComponentsEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1": {
      "get": {
        "description": "list resources available from components.eda.nokia.com/v1",
        "operationId": "getResourcesComponentsEdaNokiaComV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for components.eda.nokia.com v1",
        "operationId": "uiComponentsEdaNokiaComV1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/chassis": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Chassis",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ChassisList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list chassis",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/components": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Components",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ComponentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list components",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/controlmodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Controlmodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ControlModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list controlmodules",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/fabricmodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Fabricmodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.FabricModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fabricmodules",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/fans": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Fans",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.FanList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fans",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/interfacemodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Interfacemodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.InterfaceModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list interfacemodules",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/monitors": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Monitors",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.MonitorList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list monitors",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/chassis": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceChassis",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ChassisList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list chassis in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/chassis/{name}": {
      "get": {
        "description": "read the specified Chassis.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceChassis",
        "parameters": [
          {
            "description": "name of the Chassis",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Chassis"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/chassis/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceChassis",
        "parameters": [
          {
            "description": "name of the Chassis to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Chassis.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/chassis/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceChassis",
        "parameters": [
          {
            "description": "name of the Chassis to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Chassis.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/components": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceComponents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ComponentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list components in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/components/{name}": {
      "get": {
        "description": "read the specified Component.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceComponents",
        "parameters": [
          {
            "description": "name of the Component",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Component"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/components/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceComponents",
        "parameters": [
          {
            "description": "name of the Component to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Component.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/components/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceComponents",
        "parameters": [
          {
            "description": "name of the Component to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Component.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/controlmodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceControlmodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ControlModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list controlmodules in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/controlmodules/{name}": {
      "get": {
        "description": "read the specified ControlModule.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceControlmodules",
        "parameters": [
          {
            "description": "name of the ControlModule",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.ControlModule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/controlmodules/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceControlmodules",
        "parameters": [
          {
            "description": "name of the ControlModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced ControlModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/controlmodules/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceControlmodules",
        "parameters": [
          {
            "description": "name of the ControlModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced ControlModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fabricmodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceFabricmodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.FabricModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fabricmodules in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fabricmodules/{name}": {
      "get": {
        "description": "read the specified FabricModule.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceFabricmodules",
        "parameters": [
          {
            "description": "name of the FabricModule",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.FabricModule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fabricmodules/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceFabricmodules",
        "parameters": [
          {
            "description": "name of the FabricModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced FabricModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fabricmodules/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceFabricmodules",
        "parameters": [
          {
            "description": "name of the FabricModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced FabricModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fans": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceFans",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.FanList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fans in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fans/{name}": {
      "get": {
        "description": "read the specified Fan.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceFans",
        "parameters": [
          {
            "description": "name of the Fan",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Fan"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fans/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceFans",
        "parameters": [
          {
            "description": "name of the Fan to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Fan.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/fans/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceFans",
        "parameters": [
          {
            "description": "name of the Fan to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Fan.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/interfacemodules": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceInterfacemodules",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.InterfaceModuleList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list interfacemodules in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/interfacemodules/{name}": {
      "get": {
        "description": "read the specified InterfaceModule.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceInterfacemodules",
        "parameters": [
          {
            "description": "name of the InterfaceModule",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.InterfaceModule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/interfacemodules/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceInterfacemodules",
        "parameters": [
          {
            "description": "name of the InterfaceModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced InterfaceModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/interfacemodules/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceInterfacemodules",
        "parameters": [
          {
            "description": "name of the InterfaceModule to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced InterfaceModule.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/monitors": {
      "delete": {
        "operationId": "deleteAllComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.MonitorList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Monitor in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.MonitorList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list monitors in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Monitor",
        "operationId": "createComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/monitors/_deleted": {
      "get": {
        "operationId": "getDeletedComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Monitor that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/monitors/{name}": {
      "delete": {
        "description": "delete the specified Monitor",
        "operationId": "deleteComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Monitor to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Monitor.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "name of the Monitor",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Monitor",
        "operationId": "patchComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Monitor",
        "operationId": "replaceComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.Monitor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/monitors/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "name of the Monitor to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Monitor.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/monitors/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespaceMonitors",
        "parameters": [
          {
            "description": "name of the Monitor to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Monitor.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/powersupplies": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1NamespacePowersupplies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.PowerSupplyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list powersupplies in namespace",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/powersupplies/{name}": {
      "get": {
        "description": "read the specified PowerSupply.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readComponentsEdaNokiaComV1NamespacePowersupplies",
        "parameters": [
          {
            "description": "name of the PowerSupply",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.PowerSupply"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/powersupplies/{name}/_revs": {
      "get": {
        "operationId": "getHistoryComponentsEdaNokiaComV1NamespacePowersupplies",
        "parameters": [
          {
            "description": "name of the PowerSupply to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced PowerSupply.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/namespaces/{namespace}/powersupplies/{name}/_topology": {
      "get": {
        "operationId": "getTopologyComponentsEdaNokiaComV1NamespacePowersupplies",
        "parameters": [
          {
            "description": "name of the PowerSupply to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced PowerSupply.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/components.eda.nokia.com/v1/powersupplies": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listComponentsEdaNokiaComV1Powersupplies",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.components.v1.PowerSupplyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list powersupplies",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}